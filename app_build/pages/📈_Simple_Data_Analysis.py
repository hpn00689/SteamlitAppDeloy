import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px

# Config trang -----------------------------------------
st.set_page_config(
    page_title="Simple Data Analysis",
    page_icon="üìà",
    layout="wide"
)

df = st.session_state.df
df_non_tech = st.session_state.df_non_tech
df_title_job = st.session_state.df_title_job

# if "df" or "df_non_tech" not in st.session_state:
#     df = pd.read_csv('app_build/analysis_df_employee.csv')
#     df_non_tech = pd.read_csv('app_build/analysis_df.csv')

# T·∫°o ti√™u ƒë·ªÅ -----------------------------------------

col1, col2, col3 = st.columns([1,5,1])

with col1:
    st.write("")
with col2:
    st.image('https://i.pinimg.com/564x/f8/04/2a/f8042ae4a7f5c348ec961dbb6a660174.jpg')
    st.markdown("<h1 style='text-align: center; color: #B799FF;'>SIMPLE DATA ANALYSIS</h1>", unsafe_allow_html=True)
    st.markdown("---", unsafe_allow_html=True)
with col3:
    st.write("")    

# Gi√° tr·ªã - C√°c bi·∫øn quan s√°t -------------------------
st.markdown("#### 1. Ki·ªÉm ƒë·ªãnh m·ª©c l∆∞∆°ng ·ªü c√°c c√¥ng ty:")
st.info(""" **Gi·∫£ thi·∫øt**: 
- H0: M·ª©c l∆∞∆°ng chi tr·∫£ ·ªü c√°c c√¥ng ty c√≥ quy m√¥ kh√°c nhau th√¨ kh√°c nhau.
- H1: c√°c c√¥ng ty c√≥ quy m√¥ kh√°c nhau v·∫´n c√≥ m·ª©c chi tr·∫£ gi·ªëng nhau.
- M·ª©c √Ω nghƒ©a: alpha = 0.05.

**C√°ch th·ª±c hi·ªán**: V√¨ s·ªë m·∫´u t·∫°i c√°c t·∫≠p ƒë·ªÅu l·ªõn h∆°n 30, n√™n ta s·ª≠ d·ª•ng z-test.
""", icon="‚ÑπÔ∏è")

code_1 = ''' 
import statsmodels.stats.weightstats as ws

Company_size_L = df[df.company_size == 'L']
Company_size_M = df[df.company_size == 'M']
Company_size_S = df[df.company_size == 'S']
Company_size_L.shape,Company_size_M.shape,Company_size_S.shape

_,pvalue_1  = ws.ztest(Company_size_L.salary_in_usd,Company_size_M.salary_in_usd,alternative='two-sided')
_,pvalue_2  = ws.ztest(Company_size_L.salary_in_usd,Company_size_S.salary_in_usd,alternative='two-sided')
_,pvalue_3  = ws.ztest(Company_size_S.salary_in_usd,Company_size_M.salary_in_usd,alternative='two-sided')
'''
st.code(code_1, language='python')

st.markdown("#### K·∫øt qu·∫£:")
col1, col2, col3 = st.columns(3)

col1.metric(
    label="p-value (L-M)",
    value=0.0335,
)
col2.metric(
    label="p-value (L-S)",
    value=0.0129,
)
col3.metric(
    label="p-value (S-M)",
    value=0.7570,
)

st.info("""**Nh·∫≠n x√©t**: 
- p_value < alpha t·∫°i c√°c tr∆∞·ªùng h·ª£p c√¥ng ti c√≥ quy m√¥ l·ªõn (L), v√† p_value > alpha t·∫°i tr∆∞·ªùng h·ª£p c√¥ng ti nh·ªè (S) v√† trung b√¨nh (M), kh·∫≥ng ƒë·ªãnh c√≥ s·ª± kh√°c nhau gi·ªØa c√¥ng ti c√≥ quy m√¥ l·ªõn v·ªõi c√°c quy m√¥ kh√°c, trong khi kh√¥ng c√≥ s·ª± kh√°c bi·ªát gi·ªØa c√¥ng ti nh·ªè v√† v·ª´a.

**K·∫øt lu·∫≠n:**
- K·∫øt qu·∫£ c≈©ng kh√¥ng n·∫±m ngo√†i d·ª± ƒëo√°n c·ªßa nhi·ªÅu ng∆∞·ªùi, khi c√°c c√¥ng ti c√≥ quy m√¥ l·ªõn c√≥ ph√∫c l·ª£i nhi·ªÅu h∆°n c√°c c√¥ng ti kh√°c, tuy nhi√™n c√≥ m·ªôt ƒëi·ªÉm ƒë√°ng ch√∫ √Ω m√† c≈©ng c√≥ th·ªÉ coi l√† ƒëi·ªÉm t·ªët khi kh√¥ng c√≥ nhi·ªÅu s·ª± kh√°c bi·ªát gi·ªØa c√¥ng ti nh·ªè v√† v·ª´a, gi√∫p cho nh·ªØng ng∆∞·ªùi ƒëang t√¨m vi·ªác c√≥ t√¢m l√Ω tho·∫£i m√£i h∆°n khi ch·ªçn l·ª±a gi·ªØa c√°c c√¥ng ti t·∫ßm trung v√† nh·ªè.
""", icon="üìù")

st.markdown("---", unsafe_allow_html=True)
st.markdown("#### 2. Ki·ªÉm ƒë·ªãnh m·ª©c l∆∞∆°ng ·ªü c√°c c√°ch th·ª©c l√†m vi·ªác kh√°c nhau:")

st.info(""" **Gi·∫£ thi·∫øt**:
- H0: C√≥ s·ª± kh√°c bi·ªát gi·ªØa m·ª©c l∆∞∆°ng ·ªü c√°c h√¨nh th·ª©c l√†m vi·ªác.
- H1: H√¨nh th·ª©c l√†m vi·ªác kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn l∆∞∆°ng.
- M·ª©c √Ω nghƒ©a: alpha =  0.05.

**C√°ch th·ª±c hi·ªán:** S·ªë m·∫´u t·∫°i c√°c t·∫≠p ƒë·ªÅu l·ªõn h∆°n 30, n√™n t·∫£ s·ª≠ d·ª•ng z-test""", icon="‚ÑπÔ∏è")

code_2 = '''
df.remote_ratio.unique()

remote_0 = df[df.remote_ratio == 0]
remote_50 = df[df.remote_ratio == 50]
remote_100 = df[df.remote_ratio == 100]

_,pvalue_1  = ws.ztest(remote_0.salary_in_usd,remote_50.salary_in_usd,alternative='two-sided')
_,pvalue_2  = ws.ztest(remote_0.salary_in_usd,remote_100.salary_in_usd,alternative='two-sided')
_,pvalue_3  = ws.ztest(remote_50.salary_in_usd,remote_100.salary_in_usd,alternative='two-sided')
'''

st.code(code_2, language='python')

st.markdown("#### K·∫øt qu·∫£:")
col4, col5, col6 = st.columns(3)

col4.metric(
    label="p-value (0 - 50)",
    value=0.7032,
)
col5.metric(
    label="p-value (0 - 100)",
    value=0.0611,
)
col6.metric(
    label="p-value (50 - 100)",
    value=0.0030,
)

st.info("""**Nh·∫≠n x√©t**:
- p_value < alpha t·∫°i c√°c tr∆∞·ªùng h·ª£p l√†m vi·ªác remote ho√†n to√†n (100%), v√† p_value > alpha t·∫°i tr∆∞·ªùng h·ª£p kh√¥ng l√†m vi·ªác remote (0%) v√† l√†m vi·ªác k·∫øt h·ª£p remote (50%). Kh·∫≥ng ƒë·ªãnh r·∫±ng m·ª©c l∆∞∆°ng s·∫Ω c√≥ m·ªôt s·ª± kh√°c bi·ªát khi ta mu·ªën l√†m vi·ªác remote ho√†n to√†n.

**K·∫øt lu·∫≠n**:
- K·∫øt qu·∫£ ƒë∆∞a ra kh√¥ng qu√° ng·∫°c nhi√™n khi m√¥i tr∆∞·ªùng remote ho√†n to√†n c√≥ m·ª©c l∆∞∆°ng kh√°c h·∫≥n c√°c h√¨nh th·ª©c l√†m vi·ªác truy·ªÅn th·ªëng. 
- Tuy th·∫ø th√¨ c≈©ng ph·∫£n √°nh ƒë∆∞·ª£c m·ªôt s·ª± c·∫ßn c√¢n nh·∫Øc cho ng∆∞·ªùi lao ƒë·ªông khi l·ª±a ch·ªçn h√¨nh th·ª©c remote ho√†n to√†n khi ƒë√¢y c√≥ th·ªÉ coi l√† 'xu h∆∞·ªõng' l√†m vi·ªác c·ªßa nhi·ªÅu ng∆∞·ªùi lao ƒë·ªông hi·ªán t·∫°i trong ng√†nh c√¥ng ngh·ªá.
""", icon="üìù")